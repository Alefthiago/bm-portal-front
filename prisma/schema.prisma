// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  // relationMode = "prisma" // cria apenas a fk em nivel de aplicação
  relationMode = "foreignKeys" // cria a fk no banco de dados
}

model user {
  id       Int          @id @default(autoincrement())
  name     String
  login    String       @unique
  password String
  iv       String
  role     accessLevel? @relation(fields: [roleId], references: [id])
  roleId   Int?

  phone String? @unique
  uf    String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  deletedBy Int?
}

model accessLevel {
  id          Int                     @id @default(autoincrement())
  name        String                  @unique
  users       user[] // Usuários que pertencem a este nível
  permissions accessLevelPermission[] // Permissões associadas

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model permission {
  id   Int    @id @default(autoincrement())
  name String @unique

  accessLevels accessLevelPermission[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model accessLevelPermission {
  accessLevelId Int
  permissionId  Int

  accessLevel accessLevel @relation(fields: [accessLevelId], references: [id])
  permission  permission  @relation(fields: [permissionId], references: [id])

  @@id([accessLevelId, permissionId])
}

model navMain {
  id    Int     @id @default(autoincrement())
  title String
  icon  String?
  url   String?

  navSubs navSub[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model navSub {
  id    Int     @id @default(autoincrement())
  title String
  icon  String?
  url   String?

  navMainId Int
  navMain   navMain @relation(fields: [navMainId], references: [id])

  parentId Int?
  parent   navSub?  @relation("SubSubRelation", fields: [parentId], references: [id])
  children navSub[] @relation("SubSubRelation")

  posts post[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model post {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  url         String?
  image       String?

  navSubId Int
  navSub   navSub @relation(fields: [navSubId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
